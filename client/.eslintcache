[{"C:\\Projects\\forasoft\\client\\src\\index.js":"1","C:\\Projects\\forasoft\\client\\src\\App.js":"2","C:\\Projects\\forasoft\\client\\src\\pages\\ChatroomPage.js":"3","C:\\Projects\\forasoft\\client\\src\\components\\Header\\Header.js":"4","C:\\Projects\\forasoft\\client\\src\\components\\MessageRoll\\MessageRoll.js":"5","C:\\Projects\\forasoft\\client\\src\\contexts\\User.context.js":"6","C:\\Projects\\forasoft\\client\\src\\components\\Message\\Message.js":"7","C:\\Projects\\forasoft\\client\\src\\components\\SenderPanel\\SenderPanel.js":"8","C:\\Projects\\forasoft\\client\\src\\hooks\\user.hook.js":"9","C:\\Projects\\forasoft\\client\\src\\pages\\AuthPage.js":"10","C:\\Projects\\forasoft\\client\\src\\components\\RoomsList\\RoomsList.js":"11","C:\\Projects\\forasoft\\client\\src\\components\\RoomButton\\RoomButton.js":"12","C:\\Projects\\forasoft\\client\\src\\pages\\TestPage.js":"13"},{"size":273,"mtime":1608127718248,"results":"14","hashOfConfig":"15"},{"size":1407,"mtime":1608718381375,"results":"16","hashOfConfig":"15"},{"size":2839,"mtime":1608718149997,"results":"17","hashOfConfig":"15"},{"size":548,"mtime":1608632592730,"results":"18","hashOfConfig":"15"},{"size":473,"mtime":1608717987350,"results":"19","hashOfConfig":"15"},{"size":242,"mtime":1608564086249,"results":"20","hashOfConfig":"15"},{"size":643,"mtime":1608373617036,"results":"21","hashOfConfig":"15"},{"size":1609,"mtime":1608635323773,"results":"22","hashOfConfig":"15"},{"size":1326,"mtime":1608567844058,"results":"23","hashOfConfig":"15"},{"size":1421,"mtime":1608566412900,"results":"24","hashOfConfig":"15"},{"size":684,"mtime":1608717078936,"results":"25","hashOfConfig":"15"},{"size":1063,"mtime":1608717640205,"results":"26","hashOfConfig":"15"},{"size":133,"mtime":1609156120942,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1aoma0i",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Projects\\forasoft\\client\\src\\index.js",[],["58","59"],"C:\\Projects\\forasoft\\client\\src\\App.js",[],"C:\\Projects\\forasoft\\client\\src\\pages\\ChatroomPage.js",["60"],"import React, { useState, useContext } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nimport { Header } from '../components/Header/Header';\r\nimport { MessageRoll } from '../components/MessageRoll/MessageRoll';\r\nimport { SenderPanel } from '../components/SenderPanel/SenderPanel';\r\nimport { RoomsList } from '../components/RoomsList/RoomsList';\r\nimport '../styles/ChatroomPage.scss';\r\n\r\nimport { UserContext } from '../contexts/User.context';\r\nimport { Container } from 'reactstrap';\r\n\r\nconst socket = io.connect('http://localhost:5000');\r\n\r\nexport const ChatroomPage = (props) => {\r\n  const userData = useContext(UserContext);\r\n  const [currentRoomId, setCurrentRoomId] = useState(userData.token);\r\n  const [messages, setMessages] = useState([]);\r\n  const [connected, setConnected] = useState(0);\r\n\r\n  if (!connected) {\r\n    if (!userData.rooms.length) {\r\n      socket.emit('createRoom', currentRoomId);\r\n      userData.addRoom(currentRoomId);\r\n    }\r\n\r\n    if (props.match.params.roomId) {\r\n      socket.emit('joinRoom', {\r\n        nickname: userData.nickname,\r\n        roomId: props.match.params.roomId,\r\n      });\r\n      setCurrentRoomId(props.match.params.roomId);\r\n      userData.addRoom(props.match.params.roomId);\r\n    }\r\n\r\n    console.log(props.match.params.roomId);\r\n    console.log(userData.rooms);\r\n    console.log(currentRoomId);\r\n\r\n    setConnected(1);\r\n  }\r\n\r\n  socket.on('messages', (data) => {\r\n    if (data.senderToken === userData.token) {\r\n      data.sender = 'You';\r\n    }\r\n    const newMessages = [...messages, data];\r\n\r\n    setMessages([\r\n      {\r\n        roomId: currentRoomId,\r\n        sender: userData.nickname,\r\n        senderToken: userData.token,\r\n        text: document.getElementById('messageBox').value,\r\n        date: Date.now(),\r\n      },\r\n    ]);\r\n  });\r\n\r\n  socket.on('joinRoom', (roomId) => {\r\n    setCurrentRoomId(roomId);\r\n  });\r\n\r\n  function sendAction() {\r\n    socket.emit('message', {\r\n      roomId: currentRoomId,\r\n      sender: userData.nickname,\r\n      senderToken: userData.token,\r\n      text: document.getElementById('messageBox').value,\r\n      date: Date.now(),\r\n    });\r\n  }\r\n\r\n  function changeRoomAction(roomId) {\r\n    setCurrentRoomId(roomId);\r\n    console.log(currentRoomId);\r\n  }\r\n\r\n  return (\r\n    <div className=\"chatroom d-flex flex-column\" sm=\"12\">\r\n      <div className=\"chatroom__header\">\r\n        <Header />\r\n      </div>\r\n      <RoomsList\r\n        rooms={userData.rooms}\r\n        currentRoomId={currentRoomId}\r\n        changeRoomAction={changeRoomAction}\r\n      ></RoomsList>\r\n      <Container className=\"chatroom__message-roll\" sm=\"12\">\r\n        <MessageRoll messages={messages} />\r\n      </Container>\r\n      <div className=\"chatroom__user-panel mt-3\">\r\n        <SenderPanel sendAction={sendAction} placeholder={'Your message...'} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Projects\\forasoft\\client\\src\\components\\Header\\Header.js",[],"C:\\Projects\\forasoft\\client\\src\\components\\MessageRoll\\MessageRoll.js",[],"C:\\Projects\\forasoft\\client\\src\\contexts\\User.context.js",[],["61","62"],"C:\\Projects\\forasoft\\client\\src\\components\\Message\\Message.js",[],"C:\\Projects\\forasoft\\client\\src\\components\\SenderPanel\\SenderPanel.js",["63"],"C:\\Projects\\forasoft\\client\\src\\hooks\\user.hook.js",[],"C:\\Projects\\forasoft\\client\\src\\pages\\AuthPage.js",["64"],"import React, { useCallback, useContext } from 'react';\r\nimport {\r\n  Container,\r\n  Form,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  InputGroup,\r\n  Input,\r\n  Button,\r\n} from 'reactstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { UserContext } from '../contexts/User.context';\r\nimport '../styles/AuthPage.scss';\r\n\r\nexport const AuthPage = (props) => {\r\n  const auth = useContext(UserContext);\r\n\r\n  auth.loadUser();\r\n\r\n  console.log(auth);\r\n\r\n  function clickHandle() {\r\n    const nickname = document.getElementById('nickname').value;\r\n\r\n    if (nickname) {\r\n      auth.setUser(nickname, []);\r\n    }\r\n  }\r\n\r\n  console.log(props);\r\n\r\n  return (\r\n    <Form>\r\n      {auth.token ? (\r\n        <Redirect\r\n          to={props.match.params.roomId ? props.match.params.roomId : '/'}\r\n        />\r\n      ) : (\r\n        ''\r\n      )}\r\n      <Container className=\"auth__container d-flex flex-column justify-content-center align-items-center\">\r\n        <h2 className=\"mb-4 text-center\">For start chatting select nickname</h2>\r\n        <InputGroup>\r\n          <InputGroupAddon addonType=\"prepend\">\r\n            <InputGroupText>@</InputGroupText>\r\n          </InputGroupAddon>\r\n          <Input id=\"nickname\" placeholder=\"Select nickname\" />\r\n        </InputGroup>\r\n        <Button className=\"mt-4 center\" color=\"primary\" onClick={clickHandle}>\r\n          Confirm\r\n        </Button>\r\n      </Container>\r\n    </Form>\r\n  );\r\n};\r\n","C:\\Projects\\forasoft\\client\\src\\components\\RoomsList\\RoomsList.js",["65","66","67","68"],"C:\\Projects\\forasoft\\client\\src\\components\\RoomButton\\RoomButton.js",[],"C:\\Projects\\forasoft\\client\\src\\pages\\TestPage.js",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":47,"column":11,"nodeType":"75","messageId":"76","endLine":47,"endColumn":22},{"ruleId":"69","replacedBy":"77"},{"ruleId":"71","replacedBy":"78"},{"ruleId":"73","severity":1,"message":"79","line":12,"column":9,"nodeType":"75","messageId":"76","endLine":12,"endColumn":17},{"ruleId":"73","severity":1,"message":"80","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":28},{"ruleId":"73","severity":1,"message":"81","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":25},{"ruleId":"73","severity":1,"message":"82","line":2,"column":21,"nodeType":"75","messageId":"76","endLine":2,"endColumn":27},{"ruleId":"73","severity":1,"message":"83","line":2,"column":29,"nodeType":"75","messageId":"76","endLine":2,"endColumn":34},{"ruleId":"84","severity":1,"message":"85","line":13,"column":25,"nodeType":"86","messageId":"87","endLine":13,"endColumn":27},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'newMessages' is assigned a value but never used.","Identifier","unusedVar",["88"],["89"],"'userData' is assigned a value but never used.","'useCallback' is defined but never used.","'useState' is defined but never used.","'Button' is defined but never used.","'Badge' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]